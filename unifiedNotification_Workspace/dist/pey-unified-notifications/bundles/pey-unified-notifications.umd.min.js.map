{"version":3,"sources":["ng://pey-unified-notifications/lib/services/notifications/mobile-firebase-messaging.service.ts","ng://pey-unified-notifications/lib/services/helpers/platform-helper.service.ts","ng://pey-unified-notifications/lib/services/notifications/web-firebase-messaging.service.ts","ng://pey-unified-notifications/lib/services/notifications/unified-firebase-messaging.service.ts","ng://pey-unified-notifications/lib/guards/ios-push-permission.guard.ts","ng://pey-unified-notifications/lib/pey-unified-notifications.component.ts","ng://pey-unified-notifications/lib/pey-unified-notifications.module.ts"],"names":["MobileFirebaseMessagingService","firebase","this","permission","BehaviorSubject","token","currentMessage","isAlive","prototype","ngOnDestroy","init","getToken","initNotifications","_this","then","next","catch","err","console","log","onTokenRefresh","pipe","takeWhile","subscribe","x","onNotificationOpen","notification","joinGroup","id","leaveGroup","unsubscribe","updatePermission","grantPermission","hasPermission","perm","isEnabled","Injectable","args","providedIn","Firebase","PlatformHelperService","platformService","Object","defineProperty","window","hasOwnProperty","is","Platform","WebFirebaseMessagingService","angularFireMessaging","messaging","_messaging","onMessage","bind","receiveMessage","requestToken","error","messages","payload","tokenChanges","AngularFireMessaging","UnifiedFirebaseMessagingService","mobileNotifications","webNotifications","platformHelper","IsActive","isNative","res","Promise","IosPushNotificationPermissiongGuard","dialogs","unifiedNotificationService","canActivate","state","alert","e","Dialogs","PeyUnifiedNotificationsComponent","ngOnInit","Component","selector","template","PeyUnifiedNotificationsModule","NgModule","declarations","imports","exports","providers"],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n// declare var FirebasePlugin;\r\nimport { Firebase } from '@ionic-native/firebase/ngx';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MobileFirebaseMessagingService implements OnDestroy {\r\n\r\n  permission = new BehaviorSubject<boolean>(null);\r\n  token = new BehaviorSubject<string>(null);\r\n\r\n  currentMessage = new BehaviorSubject(null);\r\n\r\n  isAlive = true;\r\n\r\n  constructor(\r\n    private firebase: Firebase\r\n  ) { }\r\n\r\n  ngOnDestroy() {\r\n    this.isAlive = false;\r\n  }\r\n  init() {\r\n    this.getToken();\r\n    this.initNotifications();\r\n  }\r\n  getToken() { \r\n    this.firebase.getToken()\r\n        .then( token => {\r\n          this.token.next(token);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    this.firebase.onTokenRefresh()\r\n      .pipe(takeWhile(() => this.isAlive))\r\n      .subscribe( x => {\r\n        //posts on update\r\n        if(x) {\r\n          if(x !== this.token) {\r\n            this.token.next(x);\r\n          }\r\n        }\r\n      });\r\n  }\r\n  initNotifications() { \r\n    this.firebase.onNotificationOpen()\r\n      .pipe(takeWhile(() => this.isAlive))\r\n      .subscribe( notification => {\r\n          this.currentMessage.next(notification);\r\n      });\r\n  }\r\n  joinGroup(id: string) {\r\n    console.log('subscribe to group' + id);\r\n    this.firebase.subscribe(id);\r\n  }\r\n  leaveGroup(id: string) {\r\n    console.log('unsubscribe to group' + id);\r\n    this.firebase.unsubscribe(id);\r\n  }\r\n  updatePermission() {\r\n    this.firebase.grantPermission()\r\n      .then(permission => {\r\n        this.permission.next(permission);\r\n      })\r\n      .catch(err => console.log(err));\r\n    this.firebase.hasPermission()\r\n      .then(perm =>  {\r\n        console.log('permission');\r\n        console.log(perm);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  hasPermission(): Promise<boolean> {\r\n    return this.firebase.hasPermission()\r\n              .then(perm => {\r\n                return perm.isEnabled;\r\n              });\r\n  }\r\n}","\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlatformHelperService {\n\n    constructor(private platformService: Platform) { }\n\n    get isNative(): boolean {\n        //if http://local like in prod build & ios or android\n        // solution till platform.is('mobile') fixed\n        // return true;\n        if(\n            // (document.URL.indexOf( 'http://localhost') !== -1) &&\n            (window.hasOwnProperty('cordova')) &&\n            (this.platformService.is('ios') || this.platformService.is('android') )\n         ) {\n            return true;\n        } else {\n            return false;\n        }         \n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { takeWhile } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebFirebaseMessagingService implements OnDestroy{\n\n    permission = new BehaviorSubject<boolean>(null);\n    token = new BehaviorSubject<string>(null);\n    currentMessage = new BehaviorSubject(null);\n\n    isAlive= true;\n\n  constructor(\n    private angularFireMessaging: AngularFireMessaging) {\n\n  }\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n  init() {\n    this.angularFireMessaging.messaging.subscribe(\n      (_messaging) => {\n        _messaging.onMessage = _messaging.onMessage.bind(_messaging);\n        _messaging.onTokenRefresh = _messaging.onTokenRefresh.bind(_messaging);\n      }\n    );\n    // this.getToken();\n    this.receiveMessage(); \n  }\n  //on web getting the token means asking for permission\n  updatePermission() {\n      this.getToken();\n  }\n  getToken() {\n    this.angularFireMessaging.requestToken\n        .pipe(takeWhile(() => this.isAlive))\n        .subscribe(\n            (token) => {\n                this.token.next(token);\n                this.permission.next(true);\n            },\n            (err) => {\n                console.error('Unable to get permission to notify.', err);\n            }\n        );\n  }\n  receiveMessage() {\n    this.angularFireMessaging.messages\n        .pipe(takeWhile(() => this.isAlive))\n        .subscribe((payload) => {\n                this.currentMessage.next(payload);\n        });\n  }\n  onTokenRefresh() {\n      this.angularFireMessaging.tokenChanges\n        .pipe(takeWhile(() => this.isAlive))\n        .subscribe(token => {\n            this.token.next(token);\n        })\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { MobileFirebaseMessagingService } from './mobile-firebase-messaging.service';\r\n// import { WebFirebaseMessagingService } from './web-firebase-messaging.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { PlatformHelperService } from './../helpers/platform-helper.service';\r\nimport { Platform } from '@ionic/angular';\r\nimport { WebFirebaseMessagingService } from './web-firebase-messaging.service';\r\nimport { initDomAdapter } from '@angular/platform-browser/src/browser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UnifiedFirebaseMessagingService {\r\n\r\n  currentMessage = new BehaviorSubject(null);\r\n  token = new BehaviorSubject<string>(null);\r\n  IsActive = false;\r\n\r\n  //  only relevant on ios\r\n  permission = new BehaviorSubject(null);\r\n\r\n  constructor(\r\n    private mobileNotifications: MobileFirebaseMessagingService,\r\n    private webNotifications: WebFirebaseMessagingService,\r\n    private platformHelper: PlatformHelperService,\r\n    private platformService: Platform\r\n\r\n  ) {  \r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    if (this.platformHelper.isNative) {\r\n      this.mobileNotifications.init();\r\n      this.currentMessage = this.mobileNotifications.currentMessage;\r\n      this.permission = this.mobileNotifications.permission;\r\n      this.token = this.mobileNotifications.token;\r\n    } else {\r\n      this.webNotifications.init();\r\n      this.currentMessage = this.webNotifications.currentMessage;\r\n      this.token = this.webNotifications.token;\r\n      this.permission = this.webNotifications.permission;\r\n    }\r\n    this.IsActive = true;\r\n  }\r\n\r\n  joinGroup(id: string) {\r\n    if(this.platformHelper.isNative) {\r\n      this.mobileNotifications.joinGroup(id);\r\n    } else {\r\n      console.log('web topic/group subscriptions have to be resolved serverside');\r\n    }\r\n  }\r\n  leaveGroup(id: string) {\r\n    if(this.platformHelper.isNative) {\r\n      this.mobileNotifications.leaveGroup(id);\r\n    } else {\r\n      console.log('web topic/group subscriptions have to be resolved serverside');\r\n    }\r\n  }\r\n\r\n  updatePermission() {\r\n    if(this.platformHelper.isNative) {\r\n      this.mobileNotifications.updatePermission();\r\n    } else {\r\n      this.webNotifications.getToken();\r\n    }\r\n  }\r\n  // only works on iOS other platforms dont need permissions\r\n  hasPermission(): Promise<boolean> {\r\n    if(this.platformService.is('ios') && this.platformHelper.isNative) {\r\n      return this.mobileNotifications.hasPermission()\r\n        .then(res => { console.log(res);\r\n          return res;\r\n        });\r\n    } {\r\n      return new Promise<boolean>(() => {\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UnifiedFirebaseMessagingService } from '../services/notifications/unified-firebase-messaging.service';\nimport { Platform } from '@ionic/angular';\nimport { Dialogs } from '@ionic-native/dialogs/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IosPushNotificationPermissiongGuard implements CanActivate {\n\n  constructor\n  (\n    private platformService: Platform,\n    private dialogs: Dialogs,\n    private unifiedNotificationService: UnifiedFirebaseMessagingService\n  ) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(!this.platformService.is('ios') ) {\n      return true;\n    }\n    return this.unifiedNotificationService.hasPermission().then(res => {\n      if(res) {\n        return true;        \n      } else {\n        return this.dialogs.alert\n        (\n          'This app requires push notifications to work as intended.\\nYou can turn them silent any time you want.',\n          'Important'\n        )\n        .then(() => {\n          this.unifiedNotificationService.updatePermission();  \n          return true;\n        })\n        .catch(e => {\n          console.log(e);\n          return true;\n        });\n      }\n    });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n// import { Dialogs } from '@ionic-native/dialogs/ngx';\n\n@Component({\n  selector: 'lib-pey-unified-notifications',\n  template: `\n    <p>\n      pey-unified-notifications works!\n    </p>\n  `,\n  styles: []\n})\nexport class PeyUnifiedNotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  // dialogMe() {\n    \n  //   this.dialogs.alert\n  //   (\n  //     '\\LOREM IPSUM MY DUDE\\nSSSS\\n!?'     \n  //   )\n  //   .catch(e => console.log(e));\n  // }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { PeyUnifiedNotificationsComponent } from './pey-unified-notifications.component';\nimport { Dialogs } from '@ionic-native/dialogs/ngx';\nimport { Firebase } from '@ionic-native/firebase/ngx';\n\n\n@NgModule({\n  declarations: [PeyUnifiedNotificationsComponent],\n  imports: [\n  ],\n  exports: [PeyUnifiedNotificationsComponent],\n  providers: [\n    Dialogs,\n    Firebase\n  ]\n})\nexport class PeyUnifiedNotificationsModule {  }"]}